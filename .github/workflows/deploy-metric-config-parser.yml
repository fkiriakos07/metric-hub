# This workflow is based on the GH Actions docs on publishing python artifacts:
# https://docs.github.com/en/actions/tutorials/build-and-test-code/python#publishing-to-package-registries

name: "Deploy metric-config-parser"

on:
  push:
    branches:
      - main
    paths:
      - 'lib/metric-config-parser/pyproject.toml'

permissions:
  contents: read

jobs:
  changed:
    uses: ./.github/workflows/changed-files.yml
    with:
      path_filter: |
        lib/metric-config-parser/pyproject.toml

  check-version-change:
    runs-on: ubuntu-latest
    needs: changed
    permissions:
      contents: read
    outputs:
      proceed: ${{ steps.version_change.outputs.proceed }}
    if: needs.changed.outputs.any_changed == 'true'
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0
    - id: version_change
      name: Check for package version change in last commit before proceeding.
      run: |
        if git diff origin/main HEAD~1 -- ./lib/metric-config-parser/pyproject.toml | grep '\+version'
          then
            echo "Found changes to package version dir, proceeding with deployment."
            echo "proceed=true" >> "GITHUB_OUTPUT"
          else
            echo "No changes in package version. Skipping metric-config-parser deployment."
            echo "proceed=false" >> "GITHUB_OUTPUT"
        fi

  build-metric-config-parser:
    runs-on: ubuntu-latest
    needs: check-version-change
    permissions:
      contents: read
    if: needs.check-version-change.outputs.proceed == 'true'
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
    - name: Setup python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install deployment tools
      working-directory: ./lib/metric-config-parser
      run: |
        python3 -m pip install --upgrade pip build setuptools wheel
    - name: Create the distribution files
      working-directory: ./lib/metric-config-parser
      run: |
        python3.10 -m build --sdist
    - name: Upload distribution
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: release-dist
        path: ./lib/metric-config-parser/dist

  deploy-metric-config-parser:
    runs-on: ubuntu-latest
    needs: build-metric-config-parser
    permissions:
      id-token: write
      contents: read
    environment:
      name: pypi
    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
      with:
        egress-policy: audit

    - name: Retrieve release distribution
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: release-dist
        path: dist/
    - name: Publish to PyPi
      uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # release/v1
